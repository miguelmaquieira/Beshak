<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.imotion.beshak</groupId>
    <artifactId>BeshakAll</artifactId>
    <version>Beta_0100</version>
  </parent>
  <artifactId>BeshakTest</artifactId>
  <name>BeshakTest</name>
  
  <properties>
  	<webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>
  </properties>
  
  <repositories>
  	<repository>
  		<id>cobogw</id>
  		<name>Cobogw repository at googlecode</name>
  		<url>http://cobogw.googlecode.com/svn/maven2</url>
  	</repository>
  </repositories>
	
  <dependencies>
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>3.8.1</version>
  		<scope>test</scope>
  	</dependency>
  	
 
    <dependency>
    	<groupId>javax.validation</groupId>
    	<artifactId>validation-api</artifactId>
    	<version>${validation-api.version}</version>
    </dependency>
    <dependency>
    	<groupId>javax.validation</groupId>
    	<artifactId>validation-api</artifactId>
    	<version>${validation-api.version}</version>
    	<classifier>sources</classifier>
    </dependency>
  
    
    <!-- Beshak -->
    <dependency>
    	<groupId>com.imotion.beshak</groupId>
    	<artifactId>BeshakBom</artifactId>
    	<version>${project.version}</version>
	</dependency>
   <dependency>
	<groupId>com.imotion.beshak</groupId>
	<artifactId>BeshakBusiness</artifactId>
	<version>${project.version}</version>
   </dependency>
    
    <!-- SELENE -->
    <dependency>
    	<groupId>com.selene</groupId>
    	<artifactId>Selene</artifactId>
    	<version>${selene.version}</version>
    </dependency>
    <dependency>
    	<groupId>com.selene</groupId>
    	<artifactId>SeleneBase</artifactId>
    	<version>${selene.version}</version>
    </dependency>
    <dependency>
    	<groupId>com.selene</groupId>
    	<artifactId>SeleneBase</artifactId>
    	<version>${selene.version}</version>
    	<classifier>sources</classifier>
    </dependency>
  </dependencies>
  
  <build>
		<!-- Compiled java classes and all the resources get dumped into target/${webappDirectory}/WEB-INF/classes 
			during the build -->
	<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
		</resource>
		<resource>
			<!-- the java source files must be on the classpath during gwt:compile -->
			<directory>src/main/java</directory>
		</resource>
		<resource>
			<!-- the java source files that override/emulate server-side classes 
					in the client must be on the classpath during gwt:compile -->
			<directory>src/main/super</directory>
		</resource>
	</resources>
	
	<testResources>
		<testResource>
			<directory>src/test/resources</directory>
		</testResource>
	</testResources>
	
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<executions>
				<execution>
					<id>make-a-jar</id>
					<phase>package</phase>
					<goals>
						<goal>jar</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-install-plugin</artifactId>
		    <executions>
		        <execution>
		            <phase>install</phase>
		            <goals>
		                <goal>install-file</goal>
		            </goals>
		            <configuration>
		                <packaging>jar</packaging>
		                <artifactId>${project.artifactId}</artifactId>
		                <groupId>${project.groupId}</groupId>
		                <version>${project.version}</version>
		                <file>
		                    ${project.build.directory}/${project.artifactId}-${project.version}.jar
		                </file>
		            </configuration>
		        </execution>
		    </executions>
		</plugin>
	      
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>${mavenSourcePlugin.version}</version>
			<configuration>
				<skip>true</skip>
			</configuration>
		</plugin>
		
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
			<version>${gwt.version}</version>
			<executions>
				<execution>
					<!-- gwt:compile happens just before package phase -->
					<phase>gwt:compile</phase>
					<goals>
						<goal>compile</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<modules>
					<!-- Marketplace gwt module inherits Core gwt module therefore both 
							will be gwt:compiled -->

				</modules>
				<runTarget>${jspToRun}</runTarget>
				<!-- TO AVOID : You will not be able to access files from your working 
						directory on the production server. -->
				<workDir>${webappDirectory}</workDir>
					
				<!-- tell the gwt plugin that the webapp source resides in src/main/webapp -->
				<webappDirectory>${webappDirectory}</webappDirectory>
					
				<!-- tell the gwt plugin that dev mode should be run using the webapp 
						that resides in target/${webappDirectory} -->
				<hostedWebapp>${webappDirectory}</hostedWebapp>
						
				<!-- <skip>${gwt.skipCompilation}</skip> -->
				<extraJvmArgs>-Xms768m -Xmx2048m -Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory</extraJvmArgs>
				<localWorkers>2</localWorkers>
			</configuration>
		</plugin>
		<plugin>
			<!-- Copies static web files from src/main/webapp to target/${webappDirectory} -->
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>${mavenWarPlugin.version}</version>
			<executions>
				<execution>
					<!-- the exploded goal gets executed during compile phase -->
					<phase>compile</phase>
					<goals>
						<goal>exploded</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<!-- the exploded war structure ends up in target/${webappDirectory} -->
				<webappDirectory>${webappDirectory}</webappDirectory>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>${mavenEclipsePlugin.version}</version>
			<configuration>
				<downloadSources>true</downloadSources>
				<downloadJavadocs>true</downloadJavadocs>
				<buildOutputDirectory>target/${project.artifactId}/WEB-INF/classes</buildOutputDirectory>
				<projectnatures>
					<projectnature>org.eclipse.jdt.core.javanature</projectnature>
				</projectnatures>
				<buildcommands>
					<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
				</buildcommands>
				<classpathContainers>
					<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
				</classpathContainers>
				<excludes>
					<exclude>javax.validation:validation-api</exclude>
				</excludes>
			</configuration>
			<executions>
				<execution>
					<goals>
						<goal>eclipse</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<artifactId>maven-dependency-plugin</artifactId>
			<executions>
				<execution>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
						<outputDirectory>${webappDirectory}/WEB-INF/lib</outputDirectory>
						<excludeTransitive>true</excludeTransitive>
					</configuration>
				</execution>
			</executions>
		</plugin>
	</plugins>
	<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
				<lifecycleMappingMetadata>
					<pluginExecutions>
						<pluginExecution>
							<pluginExecutionFilter>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-war-plugin</artifactId>
								<versionRange>${mavenWarPlugin.version}</versionRange>
								<goals>
									<goal>exploded</goal>
								</goals>
							</pluginExecutionFilter>
							<action>
								<execute />
							</action>
						</pluginExecution>
					<pluginExecution>
						<pluginExecutionFilter>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<versionRange>[2.0,)</versionRange>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
						</pluginExecutionFilter>
						<action>
							<execute />
						</action>
					</pluginExecution>
				</pluginExecutions>
			</lifecycleMappingMetadata>
		</configuration>
	</plugin>
</plugins>
</pluginManagement>
</build>
</project>
